package proxy;

/**
 * @author cby
 * 那么这种设计模式一般用在什么场合呢？
 *
 * （1）远程代理，也就是为一个对象在不同的地址空间提供局部代表，这样可以隐藏一个对象
 * 存在于不同地址空间的事实
 *    就好比一个快捷方式，我们的桌面图标的应用往往都不在桌面的那个文件夹里
 *
 * （2）虚拟代理，根据需要创建开销很大的对象，通过它来存放实例化需要很长时间的真实对象
 *    比如你打开一个很大的HTML网页时里面可能有很多的图片和文字，但是你还是可以很快打开它
 *    此时你所看到的是所有的文字，但是图片是一张张下载才可以看到，那些未打开的图片框，
 *    就是通过虚拟代理来替代了真实的图片，此时代理存储了真实图片的路径和尺寸
 *
 * （3）安全代理，用来控制真实对象访问时的权限
 *
 * （4）智能指引：是指当调用真实的对象时，代理处理另外一件事
 *
 */


public class ProxyTest {
    public static void main(String[] args) {
        SchoolGirl mm = new SchoolGirl("beauty");

        Proxy p = new Proxy(mm);

        p.giveChocolate();
        p.giveDoll();
        p.giveFlower();

    }
}
